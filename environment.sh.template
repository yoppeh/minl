# Set this block of variables according to your system
#
# TARGET_DEV_BOOT
#   The device name of the disk you are installing the boot partition to. For 
# 	example: /dev/sdb
# TARGET_DEV_ROOT
#   The device name of the disk you are installing the root partition to. For 
# 	example: /dev/sdb
# TARGET_DEV_SWAP
#   The device name of the disk you are installing the swap partition to. For 
# 	example: /dev/sdb
# BOOT_PARTITION
#   The partition # of the boot partition you are installing to. For example: 1
# ROOT_PARTITION
#   The partition # of the root partition you are installing to. For example: 2
# SWAP_PARTITION 
#   is the partition # of the swap partition you will be using. This can be 
#   blank. For example: 3
# KERNEL_CONFIG 
#   The name of one of the kernel-config.xxxxxxxxx files in the minl repo. For 
#   example: kernel-config.virtualbox for a virtualbox vm kernel.
# TIMEZONE
#   The timezone string you want. For example: "America/Chicago"
# COMPILE_FLAGS
#   Flags that will be passed on to the c/c++ compiler _after_ stage 1 is 
#   complete.
# FMT_ROOT, FMT_BOOT and FMT_SWAP 
#   Specify whether to format the root, boot and swap partitions. Set to 1 to 
#   enable formatting, 0 to disable. If you are installing to a dual-boot
#   system, you probably already have a distro using boot and swap and wouldn't
#   want to format them. These install scripts will detect an installed boot 
#   manager and add this minl installation to it.
# ETH_DEV
#   Specifies the ethernet device to use for configuring the network, "eth0",
#   for example.
# WLAN_DEV
#   Specifies the wireless device to use for configuring the network, "wlan0",
#   for example.
# SYS_NAME
#	Name to give the system, used in things like the build target and kernel
#	filename.
# MAKEFLAGS
#	Specified flags to pass to make. set the -j4 to the number of parallel
#   builds you want to allow make to run.
# ROOT_PASSWORD
#   The initial root password for the installed system.

export TARGET_DEV_BOOT=
export TARGET_DEV_ROOT=
export TARGET_DEV_SWAP=
export ROOT_PARTITION=
export BOOT_PARTITION=
export SWAP_PARTITION=
export KERNEL_CONFIG=
export TIMEZONE=
export COMPILE_FLAGS=
export FMT_ROOT="0"
export FMT_BOOT="0"
export FMT_SWAP="0"
export ETH_DEV=eth0
export WIFI_DEV=wlan0
export SYS_NAME=minl
export MAKEFLAGS=-j4
export ROOT_PASSWORD=

# The remainder can be left alone
set +h
umask 022

if [ "$BOOT_PARTITION" ~= "" ] ; then
export BOOT_DEV=${TARGET_DEV_BOOT}${BOOT_PARTITION}
else
export BOOT_DEV=""
fi
export ROOT_DEV=${TARGET_DEV_ROOT}${ROOT_PARTITION}
export SWAP_DEV=${TARGET_DEV_SWAP}${SWAP_PARTITION}
export MINL=/mnt/${SYS_NAME}
export LC_ALL=POSIX
export CONFIG_SITE=$MINL/usr/share/config.site
if [ -d /progress ] ; then
    export PROGRESS_DIR=/progress
else
    export PROGRESS_DIR=$MINL/progress
fi
export LFS_VER=12.1

PATH=/usr/bin:/usr/sbin
if [ ! -L /bin ] ; then PATH=/bin:$PATH ; fi
if [ ! -L /sbin ] ; then PATH=/sbin:$PATH ; fi
export PATH=$MINL/tools/bin:$PATH

case $(uname -m) in
    x86)
        ;&
    x86_64)
        export MINL_TGT=$(uname -m)-${SYS_NAME}-linux-gnu
    ;;
esac

if [ "$STAGE" == "3" ] ; then
    export HOME=/root
    export TERM=/bin/bash
    export PS1='\u:\w\$ '
    export PATH=/bin:/usr/bin:/sbin:/usr/sbin
fi
